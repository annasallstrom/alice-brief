\subsection{The Court Should Disapprove the Preemption of Substantially All Computer Uses of an Abstract Idea, and Thus Hold the Claims at Issue Ineligible}
Under this Court's precedent, a patent claim is ineligible under \inline{101} if that claim has the “practical effect” of removing an abstract idea from the public domain.  \sentence{see gottschalk at 71-72}.  As shown in the previous section, claim 26 of the ‘375 patent would have the practical effect of removing all uses of an abstract idea \emph{implemented on a general-purpose computer} from the public domain. The Court should make clear that abstract ideas are reserved to the public, even when implemented on general-purpose computers.  This conclusion follows both from the purpose of the abstract idea requirement, and from this Court’s precedent applying the exception.
First, consider the purpose of the abstract idea requirement.  Abstract ideas are unpatentable because they are “the basic tools of scientific and technological work,” \sentence{gottschalk at 67}, and must remain “free to all men and reserved exclusively to none,” \sentence{bilski at 3218 (quoting \sentence{funk at 130})}.  Removing them from the public domain “might tend to impede innovation more than it would tend to promote it.”  \sentence{mayo at 1293}.
Like pencil and paper, programmable computers are a general-purpose innovation technology.  Just as most of us cannot solve, say, long division problems of a certain difficulty without writing them down, computers are capable of tasks we humans cannot practically perform unaided.  This is why general-purpose computers are so useful:  they can be put to any task for which they can be programmed.  As the Court pointed out, advances in computer hardware are of course themselves eligible for patent protection.  \sentence{bilski at TODO}.  But so are machines made of graphite and wood.  This does not mean that the abstract idea of long division is eligible for protection because it can, or even sometimes practically must, be written down.
The basic tools of innovation remain basic tools, even when they are implemented on general-purpose technologies, or must be implemented on general-purpose technologies.  To hold otherwise would allow processes to be patentable when run on a computer that we could not remove from the public domain when done by hand.  This would hamstring innovators by limiting them to a previous generation’s general-purpose technologies—pencils, calculators—and reserving the use of abstract ideas that can be most effectively, or even only, performed on general-purpose computers to those who patent them first.  Computers are in widespread use today, and are effectively unavoidable. Condemning the public to resort to pencil and paper to avoid patent infringement is untenable, and goes against the purpose of the abstract idea exception.
It also contradicts this Court’s precedent on the abstract idea exception, which is concerned with the practical effect of the patent claim.  \inline{mayo} held that a claim is not patent-eligible if it “too broadly preempt[s] the use” of a natural law or, by extension, an abstract idea. \sentence{see mayo at 1294}.  Claims must therefore be limited “in practice” by requiring “significantly more” than the abstract idea—beyond mere pre- or post-solution activity, or limitations to a field of use or “particular technological environment”—to be eligible for patent.  \sentence{see mayo at 1294 (quotations omitted) (citing \sentence{bilski at TODO}}. 
% I intend to condense this next part; the current version is long because it includes research
In so holding, \inline{mayo} drew on this Court’s past abstract idea cases, including \inline{gottschalk}, \inline{parker}, and \inline{bilski}.  \inline{gottschalk} held that a claim to a method of programming a general-purpose computer to convert binary-coded decimal numerals to pure binary was a patent-eligible abstract idea despite the fact that the claim required computer implementation.  \sentence{gottschalk at 71}.  The Court reasoned that because claimed method had “no substantial practical application except in connection with a digital computer,” the patent “in practical effect would be a patent on the algorithm itself” and therefore on an abstract idea.  \sentence{gottschalk at 71-72}.  
Building on \inline{gottschalk}, \inline{flook} showed that courts considering algorithms are to “assume[ the algorithm] to be within the prior art,” then ask whether the claim still contains a “patentable invention.”  \sentence{see flook at 594 (following this process); 591-2 (“[T]he algorithm . . . is treated as though it were a familiar part of the prior art.”)}.  Therefore, the court held that neither limitation to a specific field of use, nor the addition of “post-solution activity” like adjusting a threshold value, could render an abstract idea patentable.  \sentence{flook at 590}. 
TODO: add discussion of \inline{bilski}, including “particular technological environment” language
TODO: conclude this part with discussion of \inline{mayo}—“the steps in the claimed processes (apart from the natural laws themselves) involve well-understood, routine, conventional activity previously engaged in by researchers in the field. At the same time, upholding the patents would risk disproportionately tying up the use of the underlying natural laws, inhibiting their use in the making of further discoveries.”  \sentence{mayo at 1294}; \sentence{mayo at 1297 (asking whether the claims “add enough [to the natural laws at issue] to allow the process they describe to qualify as patent eligible processes that apply natural laws?”)}.
NOTE: this was Charles’ original discussion of post-solution activity: “The addition of a general purpose computer is no more significant than the addition of post-solution or pre-solution activity that the Court has previously held not to render an otherwise abstract idea patentable. Cases such as \inline{mayo} and \inline{flook} have disregarded post-solution and pre-solution activity on the rationale that [it does not significantly contribute to the subject matter of the claim, and that any competent draftsman could render a claim patentable by simple and insignificant addition of such limitations]. The same applies to the addition of a general-purpose computer. It does not contribute significantly to the inventive aspect of the claim, and any competent draftsman could easily insert a general purpose computer.”
% This next point ties in better to the discussion of the purpose of the abstract idea exception.
Finally, Alice’s reliance on \inline{alappat} is revealing.  Since implementing an abstract idea on a general-purpose computer does not meaningfully limit the idea, \inline{alappat} instead drew a formalistic distinction between general-purpose and special-purpose computers wherein ideas implemented on the second were patentable, then relied on the fiction that a general-purpose computer becomes special-purpose during the act of running a computer program.  \sentence{see alappat at TODO}.    
As Judge Lourie’s plurality opinion in this case correctly observed, “the Supreme Court has spoken since \inline{alappat} on the question of patent eligibility.”  \sentence{cls at 1292}.  This Court in \inline{bilski} explicitly rejected the idea that use of computer technology is categorically sufficient to confer patent protection, while reserving the question posed by this case, of whether TODO.  This case is the Court’s opportunity to reject \inline{alappat}, continue the reasoning in \inline{mayo} and \inline{bilski}, and clearly hold that claims are ineligible for patent protection if they have the practical effect of covering substantially all uses of an abstract idea on a general-purpose computer.
% I didn’t include the clever draftsman argument—I think it goes in II.C.

